// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (
        username,
        display_name,
        email,
        password,
        description
    )
VALUES ($1, $2, $3, $4, $5)
`

type CreateUserParams struct {
	Username    string
	DisplayName string
	Email       string
	Password    string
	Description sql.NullString
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser,
		arg.Username,
		arg.DisplayName,
		arg.Email,
		arg.Password,
		arg.Description,
	)
	return err
}

const deleteUserByUsername = `-- name: DeleteUserByUsername :exec
DELETE FROM users
WHERE username = $1
`

func (q *Queries) DeleteUserByUsername(ctx context.Context, username string) error {
	_, err := q.db.ExecContext(ctx, deleteUserByUsername, username)
	return err
}

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT id, created_at, updated_at, username, display_name, email, password, description
FROM users
WHERE username = $1
`

func (q *Queries) GetUserByUsername(ctx context.Context, username string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByUsername, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Username,
		&i.DisplayName,
		&i.Email,
		&i.Password,
		&i.Description,
	)
	return i, err
}

const updateUserDescription = `-- name: UpdateUserDescription :exec
UPDATE users
SET description = $1,
    updated_at = NOW()
WHERE username = $2
`

type UpdateUserDescriptionParams struct {
	Description sql.NullString
	Username    string
}

func (q *Queries) UpdateUserDescription(ctx context.Context, arg UpdateUserDescriptionParams) error {
	_, err := q.db.ExecContext(ctx, updateUserDescription, arg.Description, arg.Username)
	return err
}

const updateUserPassword = `-- name: UpdateUserPassword :exec
UPDATE users
SET password = $1
WHERE username = $2
`

type UpdateUserPasswordParams struct {
	Password string
	Username string
}

func (q *Queries) UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error {
	_, err := q.db.ExecContext(ctx, updateUserPassword, arg.Password, arg.Username)
	return err
}
